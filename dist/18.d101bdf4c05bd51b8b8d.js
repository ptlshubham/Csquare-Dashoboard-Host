(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{"5i0u":function(t,n,e){"use strict";e.r(n),e.d(n,"VisitorModule",(function(){return N}));var r=e("fXoL"),s=e("ofXK"),i=e("tyNb"),a=e("yTNM"),o=e("pdMw"),l=e("lDv5"),d=e("tk/3"),c=e("qlzE"),u=function(t,n,e,r){var s,i=arguments.length,a=i<3?n:null===r?r=Object.getOwnPropertyDescriptor(n,e):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(t,n,e,r);else for(var o=t.length-1;o>=0;o--)(s=t[o])&&(a=(i<3?s(a):i>3?s(n,e,a):s(n,e))||a);return i>3&&a&&Object.defineProperty(n,e,a),a},p=function(t,n){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,n)},v=function(){function t(t,n){this.http=t,this.httpClient=n}return t.prototype.saveVisitorRegister=function(t){return this.httpClient.post(a.a.saveVisitorDetailsURL,t)},t.prototype.saveVisitorQue=function(t){return this.httpClient.post(a.a.saveVisitorQueURL,t)},t.prototype.getVisitorQue=function(t){var n={id:t};return this.httpClient.post(a.a.getVisitorQueURL,n)},t.prototype.removeVisitorQue=function(t){var n={id:t};return this.httpClient.post(a.a.removeVisitorQueURL,n)},t.prototype.saveVisitorTest=function(t){return this.httpClient.post(a.a.saveVisitorTestURL,t)},t.prototype.getAllVisitorList=function(){return this.httpClient.get(a.a.getAllVisitorURL)},t.prototype.updateVisitorInform=function(t){return this.httpClient.post(a.a.updateVisitorInformURL,t)},t.prototype.getVisitorTestList=function(t){var n={id:t};return this.httpClient.post(a.a.getVisitorTestListURL,n)},t.prototype.removeVisitor=function(t){var n={id:t};return this.httpClient.post(a.a.removeVisitorListURL,n)},t.ctorParameters=function(){return[{type:c.a},{type:d.b}]},t=u([Object(r.E)({providedIn:"root"}),p("design:paramtypes",[c.a,d.b])],t)}(),m=function(t,n,e,r,s,i,a,o,l,d,c,u,p,v,m,f,b,h,g,y,x,w,M,k,S,q,j,L,T,I,Q,C,V,$,B){this.id=t,this.firstname=n,this.middlename=e,this.lastname=r,this.contact=s,this.parents=i,this.address=a,this.city=o,this.pincode=l,this.email=d,this.password=c,this.standard=u,this.grnumber=p,this.gender=v,this.dateofbirth=m,this.fname=f,this.mname=b,this.mnumber=h,this.schoolname=g,this.lastqulification=y,this.percentage=x,this.profile=w,this.batchtime=M,this.stdid=k,this.subid=S,this.createddate=q,this.updateddate=j,this.isactive=L,this.index=T,this.school=I,this.qulification=Q,this.fatherCont=C,this.motherCont=V,this.mothername=$,this.wappnumber=B},f=function(t,n,e,r){var s,i=arguments.length,a=i<3?n:null===r?r=Object.getOwnPropertyDescriptor(n,e):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(t,n,e,r);else for(var o=t.length-1;o>=0;o--)(s=t[o])&&(a=(i<3?s(a):i>3?s(n,e,a):s(n,e))||a);return i>3&&a&&Object.defineProperty(n,e,a),a},b=function(t,n){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,n)},h=function(){function t(t,n,e,r,s){this.apiService=t,this.VisitorService=n,this.registerService=e,this.manageService=r,this.router=s,this.visitorModel=new m,this.getStandardList()}return t.prototype.ngOnInit=function(){setTimeout((function(){$(".card.card-wizard").addClass("active")}),600),0!=$(".selectpicker").length&&$(".selectpicker").selectpicker({iconBase:"nc-icon",tickIcon:"nc-check-2"});var t=$(".card-wizard form").validate({rules:{firstname:{required:!0,minlength:3},lastname:{required:!0,minlength:3},email:{required:!0,minlength:3}},highlight:function(t){$(t).closest(".form-group").removeClass("has-success").addClass("has-danger")},success:function(t){$(t).closest(".form-group").removeClass("has-danger").addClass("has-success")},errorPlacement:function(t,n){$(n).append(t)}});$(".card-wizard").bootstrapWizard({tabClass:"nav nav-pills",nextSelector:".btn-next",previousSelector:".btn-previous",onNext:function(n,e,r){if(!$(".card-wizard form").valid())return t.focusInvalid(),!1},onInit:function(t,n,e){var r=n.find("li").length,s=n.closest(".card-wizard"),i=n.find("li:first-child a").html(),a=$('<div class="moving-tab">'+i+"</div>");$(".card-wizard .wizard-navigation").append(a);var o=100/(r=s.find(".nav li").length),l=s.find(".nav li").length,d=s.width()/l,c=e,u=0,p=$(document).width()<600&&r>3;p&&(d=s.width()/2,c=e%2,o=50),s.find(".nav li").css("width",o+"%");var v=d;d*=c;var m=e+1;(1==m||1==p&&e%2==0?d-=8:(m==l||1==p&&e%2==1)&&(d+=8),p)&&(u=parseInt(e/2),u*=38);s.find(".moving-tab").css("width",v),$(".moving-tab").css({transform:"translate3d("+d+"px, "+u+"px, 0)",transition:"all 0.5s cubic-bezier(0.29, 1.42, 0.79, 1)"}),$(".moving-tab").css("transition","transform 0s")},onTabClick:function(t,n,e){return!!$(".card-wizard form").valid()},onTabShow:function(t,n,e){var r=n.find("li").length,s=e+1,i=n.closest(".card-wizard");s>=r?($(i).find(".btn-next").hide(),$(i).find(".btn-finish").show()):($(i).find(".btn-next").show(),$(i).find(".btn-finish").hide());var a=n.find("li:nth-child("+s+") a").html();setTimeout((function(){$(".moving-tab").html(a)}),150);var o=$(".footer-checkbox");0==e?$(o).css({opacity:"0",visibility:"hidden",position:"absolute"}):$(o).css({opacity:"1",visibility:"visible"});var l=100/(r=i.find(".nav li").length),d=i.find(".nav li").length,c=i.width()/d,u=e,p=0,v=$(document).width()<600&&r>3;v&&(c=i.width()/2,u=e%2,l=50),i.find(".nav li").css("width",l+"%");var m=c;(c*=u,s=e+1,v)&&(p=parseInt(e/2),p*=38);i.find(".moving-tab").css("width",m),$(".moving-tab").css({transform:"translate3d("+c+"px, "+p+"px, 0)",transition:"all 0.5s cubic-bezier(0.29, 1.42, 0.79, 1)"})}}),$("#wizard-picture").change((function(){var t=$(this);if(t[0].files&&t[0].files[0]){var n=new FileReader;n.onload=function(t){$("#wizardPicturePreview").attr("src",t.target.result).fadeIn("slow")},n.readAsDataURL(t[0].files[0])}})),$('[data-toggle="wizard-radio"]').click((function(){var t=$(this).closest(".card-wizard");t.find('[data-toggle="wizard-radio"]').removeClass("active"),$(this).addClass("active"),$(t).find('[type="radio"]').removeAttr("checked"),$(this).find('[type="radio"]').attr("checked","true")})),$('[data-toggle="wizard-checkbox"]').click((function(){$(this).hasClass("active")?($(this).removeClass("active"),$(this).find('[type="checkbox"]').removeAttr("checked")):($(this).addClass("active"),$(this).find('[type="checkbox"]').attr("checked","true"))})),$(".set-full-height").css("height","auto")},t.prototype.ngAfterViewInit=function(){$(window).resize((function(){$(".card-wizard").each((function(){var t=$(this),n=t.bootstrapWizard("currentIndex"),e=t.find(".nav li").length,r=100/e,s=t.find(".nav li").length,i=t.width()/s,a=n,o=0,l=$(document).width()<600&&e>3;l&&(i=t.width()/2,a=n%2,r=50),t.find(".nav li").css("width",r+"%");var d=i;i*=a;var c=n+1;(1==c||1==l&&n%2==0?i-=8:(c==s||1==l&&n%2==1)&&(i+=8),l)&&(o=parseInt(n/2),o*=38);t.find(".moving-tab").css("width",d),$(".moving-tab").css({transform:"translate3d("+i+"px, "+o+"px, 0)",transition:"all 0.5s cubic-bezier(0.29, 1.42, 0.79, 1)"}),$(".moving-tab").css({transition:"transform 0s"})}))}))},t.prototype.ngOnChanges=function(t){var n=$(this);if(n[0].files&&n[0].files[0]){var e=new FileReader;e.onload=function(t){$("#wizardPicturePreview").attr("src",t.target.result).fadeIn("slow")},e.readAsDataURL(n[0].files[0])}},t.prototype.saveStudentDetail=function(){},t.prototype.Savevisitor=function(){var t=this;this.visitorModel,this.visitorModel.stdid=this.stdId,this.visitorModel.subid=this.selectedSubId,this.VisitorService.saveVisitorRegister(this.visitorModel).subscribe((function(n){t.uid=n.insertId,t.apiService.showNotification("top","right","Profile Register Successfully.","success"),t.router.navigate(["/visitor/visitorexam"],{queryParams:{subid:t.selectedSubId,stdid:t.stdId,uid:t.uid}})}))},t.prototype.getStandardList=function(){var t=this;this.manageService.getStdList().subscribe((function(n){t.stdlist=n}))},t.prototype.selectStdList=function(t){var n=this;this.stdId=t,this.getSubject(this.stdId),this.stdlist.forEach((function(e){e.id==t&&(n.selectedstd=e.stdname)}))},t.prototype.getSubject=function(t){var n=this;this.manageService.getSubjectList(t).subscribe((function(t){n.subjects=t}))},t.prototype.selectSubjectList=function(t){var n=this;this.selectedSubId=t,this.subjects.forEach((function(e){e.id==t&&(n.selectedSubject=e.subject)}))},t.ctorParameters=function(){return[{type:a.a},{type:v},{type:l.a},{type:o.a},{type:i.d}]},t=f([Object(r.o)({selector:"app-visitorreg",template:'<div class="main-content">\r\n    <div class="col-md-10 mr-auto ml-auto">\r\n        \x3c!--      Wizard container        --\x3e\r\n        <div class="wizard-container">\r\n            <div class="card card-wizard" data-color="primary" id="wizardProfile">\r\n                <form action="" method="">\r\n                    \x3c!--        You can switch " data-color="primary" "  with one of the next bright colors: "green", "orange", "red", "blue"       --\x3e\r\n                    <div class="card-header text-center">\r\n                        <h3 class="card-title">\r\n                            Build Your Profile\r\n                        </h3>\r\n                        <h5 class="description">This information will let us know more about you.</h5>\r\n                        <div class="wizard-navigation">\r\n                            <ul>\r\n                                <li class="nav-item">\r\n                                    <a class="nav-link active" href="#about" data-toggle="tab" role="tab"\r\n                                        aria-controls="about" aria-selected="true">\r\n                                        <i class="nc-icon nc-single-02"></i> About\r\n                                    </a>\r\n                                </li>\r\n                                <li class="nav-item">\r\n                                    <a class="nav-link" href="#education" data-toggle="tab" role="tab"\r\n                                        aria-controls="education" aria-selected="true">\r\n                                        <i class="nc-icon nc-touch-id"></i> Education\r\n                                    </a>\r\n                                </li>\r\n                                <li class="nav-item">\r\n                                    <a class="nav-link" href="#address" data-toggle="tab" role="tab"\r\n                                        aria-controls="address" aria-selected="true">\r\n                                        <i class="nc-icon nc-pin-3"></i> Address\r\n                                    </a>\r\n                                </li>\r\n                                <li class="nav-item">\r\n                                    <a class="nav-link" href="#test" data-toggle="tab" role="tab" aria-controls="test"\r\n                                        aria-selected="true">\r\n                                        <i class="nc-icon nc-pin-3"></i> Test\r\n                                    </a>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                    <div class="card-body">\r\n                        <div class="tab-content">\r\n                            <div class="tab-pane show active" id="about">\r\n                                <h5 class="info-text"> Let\'s start with the basic information (with validation)</h5>\r\n                                <div class="row justify-content-center">\r\n                                    <div class="col-sm-4">\r\n                                        <div class="picture-container">\r\n                                            <div class="picture">\r\n                                                <img src="./assets/img/default-avatar.png" class="picture-src"\r\n                                                    id="wizardPicturePreview" title="" />\r\n                                                <input type="file" id="wizard-picture">\r\n                                            </div>\r\n                                            <h6 class="description">Choose Your Profile Picture</h6>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class="col-sm-6">\r\n                                        <div class="row">\r\n                                            <div class="col-sm-6">\r\n                                                <div class="input-group"\r\n                                                    [ngClass]="{\'input-group-focus\':focus4===true}">\r\n                                                    <div class="input-group-prepend">\r\n                                                        <span class="input-group-text"><i\r\n                                                                class="nc-icon nc-single-02"></i></span>\r\n                                                    </div>\r\n                                                    <input type="text" class="form-control" id="firstname"\r\n                                                        name="firstname" [(ngModel)]="visitorModel.firstname"\r\n                                                        placeholder=" Enter First Name " required value=""\r\n                                                        pattern="^[a-zA-Z ]+$" (focus)="focus4=true"\r\n                                                        (blur)="focus4=false" #fname="ngModel" />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class="col-sm-6">\r\n                                                <div class="input-group"\r\n                                                    [ngClass]="{\'input-group-focus\':focus5===true}">\r\n                                                    <div class="input-group-prepend">\r\n                                                        <span class="input-group-text"><i\r\n                                                                class="nc-icon nc-single-02"></i></span>\r\n                                                    </div>\r\n                                                    <input type="text" class="form-control" id="middlename"\r\n                                                        name="middlename" [(ngModel)]="visitorModel.middlename"\r\n                                                        placeholder=" Enter Middle Name " required value=""\r\n                                                        pattern="^[a-zA-Z ]+$" (focus)="focus5=true"\r\n                                                        (blur)="focus5=false" #fname="ngModel" />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class="col-sm-6">\r\n                                                <div class="input-group"\r\n                                                    [ngClass]="{\'input-group-focus\':focus6===true}">\r\n                                                    <div class="input-group-prepend">\r\n                                                        <span class="input-group-text"><i\r\n                                                                class="nc-icon nc-single-02"></i></span>\r\n                                                    </div>\r\n                                                    <input type="text" class="form-control" id="lastname"\r\n                                                        name="lastname" [(ngModel)]="visitorModel.lastname"\r\n                                                        placeholder=" Enter Last Name" required value=""\r\n                                                        pattern="^[a-zA-Z ]+$" (focus)="focus6=true"\r\n                                                        (blur)="focus6=false" #fname="ngModel" />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class="col-sm-6">\r\n                                                <div class="input-group"\r\n                                                    [ngClass]="{\'input-group-focus\':focus7===true}">\r\n                                                    <div class="input-group-prepend">\r\n                                                        <span class="input-group-text"><i\r\n                                                                class="nc-icon nc-single-02"></i></span>\r\n                                                    </div>\r\n                                                    <input type="number" class="form-control" id="contact"\r\n                                                        [(ngModel)]="visitorModel.contact" name="contact"\r\n                                                        placeholder="Enter Contact Number" required value=""\r\n                                                        pattern="^[a-zA-Z ]+$" (focus)="focus7=true"\r\n                                                        (blur)="focus7=false" #fname="ngModel" />\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class="col-sm-6">\r\n                                                <div class="input-group"\r\n                                                    [ngClass]="{\'input-group-focus\':focus8===true}">\r\n                                                    <div class="input-group-prepend">\r\n                                                        <span class="input-group-text"><i\r\n                                                                class="nc-icon nc-single-02"></i></span>\r\n                                                    </div>\r\n                                                    <input type="text" class="form-control" id="email"\r\n                                                        [(ngModel)]="visitorModel.email" name="email"\r\n                                                        placeholder="Enter Email Id" required value=""\r\n                                                        pattern="^[a-zA-Z ]+$" (focus)="focus8=true"\r\n                                                        (blur)="focus8=false" #fname="ngModel" />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class="col-sm-6">\r\n                                                <div class="input-group"\r\n                                                    [ngClass]="{\'input-group-focus\':focus8===true}">\r\n                                                    <div class="input-group-prepend">\r\n                                                        <span class="input-group-text"><i\r\n                                                                class="nc-icon nc-single-02"></i></span>\r\n                                                    </div>\r\n                                                    <input type="password" class="form-control" id="password"\r\n                                                        [(ngModel)]="visitorModel.password" name="password"\r\n                                                        placeholder="Enter Password" required value=""\r\n                                                        pattern="^[a-zA-Z ]+$" (focus)="focus8=true"\r\n                                                        (blur)="focus8=false" #fname="ngModel" />\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class="col-md-6">\r\n                                        <div class="row">\r\n                                            \x3c!-- <div class="col-md-2"></div> --\x3e\r\n                                            <div class="col-md-3">\r\n                                                <label>Select Gender</label>\r\n                                                <div class="form-check-radio">\r\n                                                    <label class="form-check-label" style="color: black !important">\r\n                                                        <input #genm class="form-check-input" name="gender"\r\n                                                            [(ngModel)]="visitorModel.gender" type="radio" value="male"\r\n                                                            ngModel />\r\n                                                        Male\r\n                                                        <span class="form-check-sign"></span>\r\n                                                    </label>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class="col-md-3">\r\n                                                <label>&nbsp;</label>\r\n                                                <div class="form-check-radio">\r\n                                                    <label class="form-check-label" style="color: black !important">\r\n                                                        <input #genf class="form-check-input" name="gender"\r\n                                                            [(ngModel)]="visitorModel.gender" type="radio"\r\n                                                            value="female" ngModel />\r\n                                                        Female\r\n                                                        <span class="form-check-sign"></span>\r\n                                                    </label>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class="col-md-6">\r\n                                        <div class="input-group" [ngClass]="{\'input-group-focus\':focus===true}">\r\n                                            <div class="input-group-prepend">\r\n                                                <span class="input-group-text"><i class="fa fa-whatsapp"></i></span>\r\n                                            </div>\r\n                                            <input type="number" class="form-control" id="fname"\r\n                                                [(ngModel)]="visitorModel.wapp" name="wapp"\r\n                                                placeholder="Enter WhatsApp Number (required)" required value=""\r\n                                                pattern="^[a-zA-Z ]+$" (focus)="focus=true" (blur)="focus=false"\r\n                                                #fname="ngModel" />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class="col-md-6">\r\n                                        <div class="input-group" [ngClass]="{\'input-group-focus\':focus1===true}">\r\n                                            <div class="input-group-prepend">\r\n                                                <span class="input-group-text"><i\r\n                                                        class="nc-icon nc-circle-10"></i></span>\r\n                                            </div>\r\n                                            <input type="number" class="form-control" id="parents"\r\n                                                [(ngModel)]="visitorModel.parents" name="parents"\r\n                                                placeholder="Enter Father Number" required value="" pattern="^[0-9]+$"\r\n                                                (focus)="focus1=true" (blur)="focus1=false" #parents="ngModel" />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class="col-md-6">\r\n                                        <div class="input-group" [ngClass]="{\'input-group-focus\':focus2===true}">\r\n                                            <div class="input-group-prepend">\r\n                                                <span class="input-group-text"><i\r\n                                                        class="nc-icon nc-circle-10"></i></span>\r\n                                            </div>\r\n                                            <input type="text" class="form-control" id="mname"\r\n                                                [(ngModel)]="visitorModel.mname" name="mname"\r\n                                                placeholder="Enter Mother Name" required value="" pattern="^[a-zA-Z ]+$"\r\n                                                (focus)="focus2=true" (blur)="focus2=false" #mname="ngModel" />\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class="col-md-6">\r\n                                        <div class="input-group" [ngClass]="{\'input-group-focus\':focus3===true}">\r\n                                            <div class="input-group-prepend">\r\n                                                <span class="input-group-text"><i class="fa fa-phone"></i></span>\r\n                                            </div>\r\n                                            <input type="number" class="form-control" id="mnumber"\r\n                                                [(ngModel)]="visitorModel.mnumber" name="mnumber"\r\n                                                placeholder="Enter Mother Number" required value="" pattern="^[0-9]+$"\r\n                                                (focus)="focus3=true" (blur)="focus3=false" #mnumber="ngModel" />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class="col-md-6"></div>\r\n                                </div>\r\n                            </div>\r\n                            <div class="tab-pane" id="education">\r\n                                <h5 class="info-text"> Let\'s start with the basic information (with validation)</h5>\r\n                                <div class="row justify-content-center">\r\n                                    <div class="col-lg-12">\r\n                                        <div class="row">\r\n                                            <div class="col-lg-6">\r\n                                                <div class="input-group" [ngClass]="{\'input-group-focus\':focus===true}">\r\n                                                    <div class="input-group-prepend">\r\n                                                        <span class="input-group-text"><i\r\n                                                                class="fa fa-school"></i></span>\r\n                                                    </div>\r\n                                                    <input type="text" class="form-control" id="schoolname"\r\n                                                        [(ngModel)]="visitorModel.schoolname" name="schoolname"\r\n                                                        placeholder="Enter School Name" required value=""\r\n                                                        pattern="^[a-zA-Z., ]+$" (focus)="focus=true"\r\n                                                        (blur)="focus=false" #schoolname="ngModel" />\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class="col-lg-6">\r\n                                                <div class="input-group"\r\n                                                    [ngClass]="{\'input-group-focus\':focus2===true}">\r\n                                                    <div class="input-group-prepend">\r\n                                                        <span class="input-group-text"><i\r\n                                                                class="nc-icon nc-send"></i></span>\r\n                                                    </div>\r\n                                                    <input type="text" class="form-control" id="lastqulification"\r\n                                                        [(ngModel)]="visitorModel.lastqulification"\r\n                                                        name="lastqulification" placeholder="Enter Last Qualification"\r\n                                                        required value="" pattern="^[a-zA-Z., ]+$" (focus)="focus2=true"\r\n                                                        (blur)="focus2=false" #lastqulification="ngModel" />\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class="col-lg-6">\r\n                                                <div class="input-group"\r\n                                                    [ngClass]="{\'input-group-focus\':focus1===true}">\r\n                                                    <div class="input-group-prepend">\r\n                                                        <span class="input-group-text"><i\r\n                                                                class="fa fa-percent"></i></span>\r\n                                                    </div>\r\n                                                    <input type="number" class="form-control" id="percentage"\r\n                                                        [(ngModel)]="visitorModel.percentage" name="percentage"\r\n                                                        placeholder="Enter Percentage" required value=""\r\n                                                        pattern="^[a-zA-Z., ]+$" (focus)="focus1=true"\r\n                                                        (blur)="focus1=false" #percentage="ngModel" />\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class="tab-pane" id="address">\r\n                                <div class="row justify-content-center">\r\n                                    <div class="col-sm-12">\r\n                                        <h5 class="info-text"> Are you living in a nice area? </h5>\r\n                                    </div>\r\n                                    <div class="col-sm-7">\r\n                                        <label>Street Name</label>\r\n                                        <div class="input-group" [ngClass]="{\'input-group-focus\':focus===true}">\r\n                                            <div class="input-group" [ngClass]="{\'input-group-focus\':focus2===true}">\r\n                                                <div class="input-group-prepend">\r\n                                                    <span class="input-group-text"><i\r\n                                                            class="fa fa-map-marker"></i></span>\r\n                                                </div>\r\n                                                <textarea type="text" class="form-control" id="address" name="address"\r\n                                                    rows="3" cols="30" [(ngModel)]="visitorModel.address"\r\n                                                    placeholder="Enter Address" required value=""\r\n                                                    pattern="^[A-Za-z0-9\'\\.\\-\\s\\,]+$" (focus)="focus=true"\r\n                                                    (blur)="focus=false" #address="ngModel"></textarea>\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class="col-sm-3">\r\n                                        <label>City</label>\r\n                                        <div class="input-group" [ngClass]="{\'input-group-focus\':focus1===true}">\r\n                                            <div class="input-group-prepend">\r\n                                                <span class="input-group-text"><i class="fa fa-map-marker"></i></span>\r\n                                            </div>\r\n                                            <input type="text" class="form-control" id="city"\r\n                                                [(ngModel)]="visitorModel.city" name="city" placeholder="Enter City"\r\n                                                required value="" pattern="^[a-zA-Z ]+$" (focus)="focus1=true"\r\n                                                (blur)="focus1=false" #city="ngModel" />\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class="col-sm-5">\r\n                                        <label>Pincode</label>\r\n                                        <div class="input-group" [ngClass]="{\'input-group-focus\':focus2===true}">\r\n                                            <div class="input-group-prepend">\r\n                                                <span class="input-group-text"><i class="fa fa-map-pin"></i></span>\r\n                                            </div>\r\n                                            <input type="number" class="form-control" id="pincode"\r\n                                                [(ngModel)]="visitorModel.pincode" name="pincode"\r\n                                                placeholder="Enter Pincode" required value="" pattern="^[0-9 ]+$"\r\n                                                (focus)="focus2=true" (blur)="focus2=false" #pincode="ngModel" />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class="tab-pane" id="test">\r\n                                <div class="row justify-content-center">\r\n                                    <div class="col-sm-12 ">\r\n                                        <h5 class="info-text"> Select According Your Choice.</h5>\r\n                                    </div>\r\n                                    <div class="col-sm-4">\r\n                                        <label>Select Standard</label>\r\n                                        <div class="dropdown form-group">\r\n                                            <button class="dropdown-toggle btn btn-round btn-block" type="button"\r\n                                                name="dropdownMenuButton" id="dropdownMenuButton" data-toggle="dropdown"\r\n                                                aria-haspopup="true" aria-expanded="false">\r\n                                                {{ selectedstd }}\r\n                                            </button>\r\n                                            <div class="dropdown-menu dropdown-menu-right"\r\n                                                aria-labelledby="dropdownMenuButton">\r\n                                                <div class="dropdown-header">Select Standard</div>\r\n                                                <div *ngFor="let std of stdlist">\r\n                                                    <a class="dropdown-item" (click)="selectStdList(std.id)">{{\r\n                                                        std.stdname\r\n                                                        }}</a>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class="col-sm-4">\r\n                                        <label>Select Subject</label>\r\n                                        <div class="dropdown form-group">\r\n                                            <button class="dropdown-toggle btn btn-round btn-block" type="button"\r\n                                                name="dropdownMenuButton" id="dropdownMenuButton" data-toggle="dropdown"\r\n                                                aria-haspopup="true" aria-expanded="false">\r\n                                                {{ selectedSubject }}\r\n                                            </button>\r\n                                            <div class="dropdown-menu dropdown-menu-right"\r\n                                                aria-labelledby="dropdownMenuButton">\r\n                                                <div class="dropdown-header">Select Subject</div>\r\n                                                <div *ngFor="let sub of subjects">\r\n                                                    <a class="dropdown-item" (click)="selectSubjectList(sub.id)">{{\r\n                                                        sub.subject\r\n                                                        }}</a>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class="card-footer">\r\n                        <div class="pull-right">\r\n                            <input type=\'button\' class=\'btn btn-next btn-fill btn-rose btn-wd\' name=\'next\'\r\n                                value=\'Next\' />\r\n                            <input type=\'button\' class=\'btn btn-finish btn-fill btn-rose btn-wd\' name=\'finish\'\r\n                                value=\'Finish\' (click)="Savevisitor()" />\r\n                        </div>\r\n                        <div class="pull-left">\r\n                            <input type=\'button\' class=\'btn btn-previous btn-fill btn-default btn-wd\' name=\'previous\'\r\n                                value=\'Previous\' />\r\n                        </div>\r\n                        <div class="clearfix"></div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n        \x3c!-- wizard container --\x3e\r\n    </div>\r\n\r\n</div>',styles:["input::-webkit-outer-spin-button,\r\ninput::-webkit-inner-spin-button {\r\n    -webkit-appearance: none !important;\r\n    margin: 0 !important;\r\n}\r\n\r\n/* Firefox */\r\n\r\ninput[type=number] {\r\n    -moz-appearance: textfield !important;\r\n}"]}),b("design:paramtypes",[a.a,v,l.a,o.a,i.d])],t)}(),g=e("DU4I"),y=function(t,n,e,r){var s,i=arguments.length,a=i<3?n:null===r?r=Object.getOwnPropertyDescriptor(n,e):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(t,n,e,r);else for(var o=t.length-1;o>=0;o--)(s=t[o])&&(a=(i<3?s(a):i>3?s(n,e,a):s(n,e))||a);return i>3&&a&&Object.defineProperty(n,e,a),a},x=function(t,n){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,n)},w=function(){function t(t,n,e,r){this.manageService=t,this.questionService=n,this.apiService=e,this.VisitorService=r,this.questionModel={},this.questionList=!1,this.addQuestion=!1,this.openQuestionnaire=!1,this.viewTestFlag=!1,this.addOptions=[],this.addAnswers=[],this.visitorTestList=[],this.ansVal=0,this.val=0,this.issubjectlist=!1,this.submitButton=!1,this.isMasterSel=!1,this.totalQuestions=0,this.totalMarks=0,this.duration=0,this.testName="",this.standardName="",this.subjectName="",this.getStandardList()}return t.prototype.ngOnInit=function(){this.addOptions=[{id:this.val,name:""}],this.val++,this.addAnswers=[{name:this.ansVal}],this.ansVal++},t.prototype.addOptionsList=function(){this.val++,this.addOptions.push({id:this.val,name:"",image:""})},t.prototype.removeOptionsList=function(t){this.addOptions.splice(t,1)},t.prototype.addAnswersList=function(){this.ansVal++,this.addAnswers.push({name:this.ansVal})},t.prototype.removeAnswersList=function(t){this.addAnswers.splice(t,1)},t.prototype.getStandardList=function(){var t=this;this.manageService.getStdList().subscribe((function(n){t.stdlist=n}))},t.prototype.selectStdList=function(t){var n=this;this.issubjectlist=!0,this.viewTestFlag=!1,this.stdId=t,this.getSubject(),this.stdlist.forEach((function(e){e.id==t&&(n.selectedstd=e.stdname),n.getSubject()}))},t.prototype.selectStdVisitor=function(t){var n=this;this.stdId=t,this.getSubject(),this.stdlist.forEach((function(e){e.id==t&&(n.selectedStd=e.stdname)}))},t.prototype.getSubject=function(){var t=this;this.manageService.getSubjectList(this.stdId).subscribe((function(n){t.subjects=n,t.subjects.forEach((function(n){t.VisitorService.getVisitorQue(n.id).subscribe((function(t){n.question=t,n.color="3px 3px 5px 5px #ebf0ec"}))}))}))},t.prototype.selectSubjectList=function(t){var n=this;this.selectedSubjectId=t,this.subjects.forEach((function(e){e.id==t&&(n.selectedSubject=e.subject),n.getVisitorTest()}))},t.prototype.getVisitorTest=function(){var t=this;this.VisitorService.getVisitorTestList(this.selectedSubjectId).subscribe((function(n){t.visitorTestList=n}))},t.prototype.ViewVisitorTestQue=function(t){this.questionModel=t},t.prototype.openQuestionList=function(t){var n=this;this.subjects.forEach((function(e){e.id==t.id?e.color="3px 3px 5px 5px #ef8157":e.color="3px 3px 5px 5px #ebf0ec",n.subjectId=t.id,n.subjectName=t.subject})),this.questionList=!0,this.getQueList()},t.prototype.openQuestionnaireBox=function(){this.openQuestionnaire=!0,this.viewTestFlag=!1},t.prototype.closeQuestion=function(){this.issubjectlist=!1,this.openQuestionnaire=!1,this.addQuestion=!1,this.questionList=!1,this.submitButton=!1,this.viewTestFlag=!1},t.prototype.openTestBox=function(){this.viewTestFlag=!0,this.openQuestionnaire=!1,this.addQuestion=!1,this.questionList=!1,this.submitButton=!1,this.issubjectlist=!1},t.prototype.backToHome=function(){this.viewTestFlag=!1,this.openQuestionnaire=!1,this.addQuestion=!1,this.questionList=!1,this.submitButton=!1,this.issubjectlist=!1},t.prototype.openQuestionBox=function(){this.addQuestion=!0,this.questionList=!1,this.submitButton=!0,this.viewTestFlag=!1},t.prototype.closeQue=function(){this.addQuestion=!1,this.questionList=!0,this.viewTestFlag=!1},t.prototype.saveNewQuestion=function(t){var n=this;t.options=this.addOptions,t.answer=this.addAnswers,t.stdid=this.stdId,t.subid=this.subjectId,t.quetype="MCQ",this.VisitorService.saveVisitorQue(t).subscribe((function(t){n.apiService.showNotification("top","right","New Question Added Successfully.","success"),n.getQueList(),n.questionList=!0,n.addQuestion=!1}))},t.prototype.getQueList=function(){var t=this;this.VisitorService.getVisitorQue(this.subjectId).subscribe((function(n){t.que=n;for(var e=0;e<t.que.length;e++)t.que[e].index=e+1}))},t.prototype.removeQuestion=function(t){var n=this;this.VisitorService.removeVisitorQue(t).subscribe((function(t){n.apiService.showNotification("top","right","Remove Question Successfully.","success"),n.getQueList()}))},t.prototype.resetModalData=function(){for(var t=0;t<this.que.length;t++)this.que[t].isactive=!1;this.checkedQuestionList=[],this.totalMarks=0,this.totalQuestions=0,this.duration=0,this.isMasterSel=!1,this.testName=""},t.prototype.checkUncheckAll=function(){for(var t=0;t<this.que.length;t++)this.que[t].isactive=this.isMasterSel;this.getCheckedItemList()},t.prototype.isAllSelected=function(){this.isMasterSel=this.que.every((function(t){return 1==t.isSelected})),this.isMasterSel=!0,this.getCheckedItemList()},t.prototype.getCheckedItemList=function(){this.checkedQuestionList=[],this.duration=0,this.totalMarks=0,this.totalQuestions=0;for(var t=0;t<this.que.length;t++)if(this.que[t].isactive){this.checkedQuestionList.push(this.que[t]);for(t=0;t<this.checkedQuestionList.length;t++)this.checkedQuestionList[t].isactive=this.isMasterSel;this.totalMarks=this.totalMarks+this.que[t].marks,this.duration=this.duration+this.que[t].time}this.totalQuestions=this.checkedQuestionList.length},t.prototype.addTest=function(){},t.prototype.updateTotals=function(){this.totalMarks=0,this.duration=0;for(var t=0;t<this.checkedQuestionList.length;t++)this.totalMarks=this.totalMarks+this.checkedQuestionList[t].marks,this.duration=this.duration+this.checkedQuestionList[t].time},t.prototype.setMarks=function(t,n){n.marks=Number(t),this.updateTotals()},t.prototype.setDuration=function(t,n){n.time=Number(t),this.updateTotals()},t.prototype.createTest=function(t){var n=this;console.log("Create Test"),t.stdId=this.stdId,t.subjectId=this.subjectId,t.questionlist=this.checkedQuestionList,this.VisitorService.saveVisitorTest(t).subscribe((function(t){n.apiService.showNotification("top","right","Visitor Test added Successfully.","success")})),this.resetModalData()},t.ctorParameters=function(){return[{type:o.a},{type:g.a},{type:a.a},{type:v}]},t=y([Object(r.o)({selector:"app-manageque",template:'<div class="main-content">\r\n    <div class="row">\r\n        <div class="col-lg-4 col-md-6 col-sm-6">\r\n            <div class="card card-stats" (click)="openQuestionnaireBox()">\r\n                <div class="card-body">\r\n                    <div class="row">\r\n                        <div class="col-5 col-md-4">\r\n                            <div class="icon-big text-center icon-warning">\r\n                                <i class="fa fa-question text-danger"></i>\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-7 col-md-8">\r\n                            <div class="numbers">\r\n                                <p class="card-title">Add Questionnaire</p>\r\n                                <p class="card-category">Total:\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class="card-footer">\r\n                    <hr>\r\n                    <div class="stats">\r\n                        <i class="fa fa-arrow-right"></i> View\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class="col-lg-4 col-md-6 col-sm-6">\r\n            <div class="card card-stats" (click)="openTestBox()">\r\n                <div class="card-body ">\r\n                    <div class="row">\r\n                        <div class="col-5 col-md-4">\r\n                            <div class="icon-big text-center icon-warning">\r\n                                <i class="fa fa-check text-success"></i>\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-7 col-md-8">\r\n                            <div class="numbers">\r\n                                <p class="card-title">View Test List</p>\r\n                                <p class="card-category">Total:\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class="card-footer">\r\n                    <hr>\r\n                    <div class="stats">\r\n                        <i class="fa fa-arrow-right"></i> View\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class="card" *ngIf="openQuestionnaire">\r\n        <div class="card-header">\r\n            <div class="row">\r\n                <div class="col-md-9">\r\n                    <h4 class="card-title">Manage Question For Visitor</h4>\r\n                </div>\r\n                <div class="ml-md-auto">\r\n                    <button type="cancel" class="btn btn-danger btn-round" (click)="closeQuestion()">\r\n                        <i class="fa fa-arrow-left"></i> Back\r\n                    </button>\r\n                    \x3c!-- <button type="submit" class="btn btn-info btn-round" routerLink="/manage/std">Add Standard</button> --\x3e\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class="card-body">\r\n            <div class="row">\r\n                <div class="col-md-2">\r\n                    <label>Select Standard</label>\r\n                </div>\r\n                <div class="col-md-4">\r\n                    <div class="dropdown form-group">\r\n                        <button class="dropdown-toggle btn btn-round btn-block" type="button" name="dropdownMenuButton"\r\n                            id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">\r\n                            {{ selectedstd }}\r\n                        </button>\r\n                        <div class="dropdown-menu dropdown-menu-right" aria-labelledby="dropdownMenuButton">\r\n                            <div class="dropdown-header">Select Standard</div>\r\n                            <div *ngFor="let std of stdlist">\r\n                                <a class="dropdown-item" (click)="selectStdList(std.id)">{{\r\n                                    std.stdname\r\n                                    }}</a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n    <div class="row" *ngIf="issubjectlist">\r\n        <div class="col-lg-2 col-md-6 col-sm-6" *ngFor="let s of subjects; let i = index">\r\n            <div class="card card-stats" (click)="openQuestionList(s)" [style.box-shadow]="s.color">\r\n                <div class="card-body">\r\n                    <div class="row">\r\n                        <div class="col-md-12">\r\n                            <div class="numbers">\r\n                                <p class="card-title" style="\r\n                                        font-size: 22px !important;\r\n                                        text-align: justify;\r\n                                        font-weight: 600;\r\n                                      ">\r\n                                    {{ s.subject }}\r\n                                </p>\r\n                                \x3c!-- <p class="card-category">Subject: {{s.subjectList.length}} --\x3e\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class="card-footer">\r\n                    <hr />\r\n                    <div class="stats">Total Questions: {{ s.question.length }}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class="card" *ngIf="questionList">\r\n        <div class="card-header">\r\n            <div class="row">\r\n                <div class="col-md-9">\r\n                    <h4 class="card-title">Manage Questionnaire</h4>\r\n                </div>\r\n                <div class="ml-md-auto">\r\n                    <button type="submit" class="btn btn-success btn-round" data-toggle="modal" data-target="#testModal"\r\n                        *ngIf="isMasterSel" (click)="addTest()">\r\n                        <i class="fa fa-plus" aria-hidden="true"></i> Add Test\r\n                    </button>\r\n                    <button type="submit" class="btn btn-info btn-round" (click)="openQuestionBox()">\r\n                        <i class="fa fa-plus" aria-hidden="true"></i> Add Question\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class="card-body">\r\n            <div class="table-responsive">\r\n                <table class="table">\r\n                    <thead class="text-primary">\r\n                        <th class="text-left">\r\n                            <div class="form-check">\r\n                                <label class="form-check-label">\r\n                                    <input class="form-check-input" [(ngModel)]="isMasterSel" name="list_name"\r\n                                        value="h1" (change)="checkUncheckAll()" type="checkbox" />\r\n                                    <span class="form-check-sign"></span>\r\n                                </label>\r\n                            </div>\r\n                        </th>\r\n                        <th class="text-center">#</th>\r\n                        <th class="text-center">Questions</th>\r\n                        <th class="text-center">Marks</th>\r\n                        <th class="text-center">Time Duration</th>\r\n                        <th class="text-right">Actions</th>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr *ngFor="let item of que | paginate: { itemsPerPage: 5, currentPage: p }">\r\n                            <td>\r\n                                <div class="form-check">\r\n                                    <label class="form-check-label">\r\n                                        <input class="form-check-input" [(ngModel)]="item.isactive" name="list_name"\r\n                                            value="{{ item.id }}" (change)="isAllSelected()" type="checkbox" />\r\n                                        <span class="form-check-sign"></span>\r\n                                    </label>\r\n                                </div>\r\n                            </td>\r\n                            <td class="text-center">{{item.index }}</td>\r\n                            <td class="text-center">{{ item.question }}</td>\r\n                            <td class="text-center">{{ item.marks }} Marks</td>\r\n                            <td class="text-center">{{ item.time }} Minute</td>\r\n                            <td class="text-right">\r\n                                <button type="button" rel="tooltip" class="btn btn-success btn-icon btn-sm">\r\n                                    <i class="fa far fa-edit" (click)="editQuestion(item)"></i>\r\n                                </button>\r\n                                &nbsp;\r\n                                <button type="button" rel="tooltip" (click)="removeQuestion(item.id)"\r\n                                    class="btn btn-danger btn-icon btn-sm">\r\n                                    <i class="fa fa-times"></i>\r\n                                </button>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n        <div class="card-footer">\r\n            <div class="row">\r\n                <div class="ml-md-auto">\r\n                    <pagination-controls (pageChange)="p = $event" autoHide="true" responsive="true">\r\n                    </pagination-controls>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class="card" *ngIf="addQuestion">\r\n        <div class="card-header">\r\n            <div class="row">\r\n                <div class="col-md-9">\r\n                    <h4 class="card-title">Add New Question</h4>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class="card-body">\r\n            <form class="form-horizontal" name="questionRegForm" #questionRegForm="ngForm">\r\n\r\n                <div class="row">\r\n                    <div class="col-md-8">\r\n                        <div class="form-group">\r\n                            <label class="col-form-label" for="question">Question</label>\r\n                            <br />\r\n                            <textarea class="form-control" id="question" rows="3" name="question"\r\n                                placeholder="Enter a question here" [(ngModel)]="questionModel.question"></textarea>\r\n                        </div>\r\n                    </div>\r\n                    <div class="col-md-4"></div>\r\n                    <div class="col-md-4">\r\n                        <div class="form-group">\r\n                            <label class="col-form-label" for="answer">Marks</label>\r\n                            <input type="text" class="form-control" id="marks" name="marks" placeholder="Enter Marks"\r\n                                [(ngModel)]="questionModel.marks" />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class="col-md-4">\r\n                        <div class="form-group">\r\n                            <label class="col-form-label" for="duration">Time Duration</label>\r\n                            <input type="text" class="form-control" id="duration" name="duration"\r\n                                placeholder="Enter Time Duration" [(ngModel)]="questionModel.time" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class="row" *ngFor="let add of addOptions; let ind = index">\r\n                    <div class="col-md-4">\r\n                        <label class="col-form-label" for="question">\r\n                            Options {{ ind + 1 }}</label>\r\n                        <div class="form-group">\r\n                            <input type="text" class="form-control" id="options" name="options"\r\n                                placeholder=" Enter option value" [(ngModel)]="add.option" />\r\n                        </div>\r\n                    </div>\r\n                    <div class="col-md-1">\r\n                        <i class="fa fa-plus-circle" aria-hidden="true" (click)="addOptionsList()"\r\n                            style="font-size: 33px !important; margin-top: 54% !important"></i>\r\n                    </div>\r\n                    <div class="col-md-1" *ngIf="ind > 0">\r\n                        <i class="fa fa-times-circle" aria-hidden="true" (click)="removeOptionsList(ind)" style="\r\n                      font-size: 33px !important;\r\n                      margin-top: 54% !important;\r\n                      margin-left: -80px !important;\r\n                    "></i>\r\n                    </div>\r\n                </div>\r\n                <div class="row" *ngFor="let add of addAnswers; let ind = index">\r\n                    <div class="col-md-4">\r\n                        <div class="form-group">\r\n                            <label class="col-form-label" for="answer">Answer {{ ind + 1 }}\r\n                            </label>\r\n                            <input type="text" class="form-control" id="answer" name="answer"\r\n                                placeholder="Enter correct answer" [(ngModel)]="add.answer" />\r\n                        </div>\r\n                    </div>\r\n                    <div class="col-md-1">\r\n                        <i class="fa fa-plus-circle" aria-hidden="true" (click)="addAnswersList()"\r\n                            style="font-size: 33px !important; margin-top: 54% !important"></i>\r\n                    </div>\r\n                    <div class="col-md-1" *ngIf="ind > 0">\r\n                        <i class="fa fa-times-circle" aria-hidden="true" (click)="removeAnswersList(ind)" style="\r\n                      font-size: 33px !important;\r\n                      margin-top: 54% !important;\r\n                      margin-left: -80px !important;\r\n                    "></i>\r\n                    </div>\r\n                </div>\r\n\r\n            </form>\r\n        </div>\r\n        <div class="card-footer">\r\n            <div class="row">\r\n                <div class="ml-md-auto">\r\n                    <button type="submit" class="btn btn-round" (click)="closeQue()">\r\n                        Cancel\r\n                    </button>\r\n                    &nbsp;\r\n                    <button type="submit" class="btn btn-info btn-round" *ngIf="submitButton"\r\n                        [disabled]="!questionRegForm.form.valid" (click)="saveNewQuestion(questionModel)">\r\n                        <i class="fa fa-paper-plane" aria-hidden="true"></i> Submit\r\n                    </button>\r\n                    <button type="submit" class="btn btn-info btn-round" *ngIf="updateButton"\r\n                        (click)="updateQuestion(questionModel)">\r\n                        Update\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class="modal fade" id="testModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel"\r\n        aria-hidden="true">\r\n        <div class="modal-dialog modal-xl modal-notice">\r\n            <div class="modal-content">\r\n                <div class="modal-header">\r\n                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">\r\n                        <i class="nc-icon nc-simple-remove"></i>\r\n                    </button>\r\n                    <h5 class="modal-title" id="myModalLabel">Create Test / Quiz</h5>\r\n                </div>\r\n                <div class="modal-body">\r\n                    <div class="instruction">\r\n                        <form class="form-vertical" #quizform="ngForm">\r\n                            <div class="form-group row">\r\n                                <label for="testname" class="col-sm-2 col-form-label">Test Name:\r\n                                </label>\r\n                                <div class="col-sm-10">\r\n                                    <input type="text" [ngModel]="testName" class="form-control" name="testname"\r\n                                        value="{{ testName }}" />\r\n                                </div>\r\n                            </div>\r\n                            <div class="form-group row">\r\n                                <label for="standard" class="col-sm-2 col-form-label">Standard:\r\n                                </label>\r\n                                <div class="col-sm-4">\r\n                                    <input type="text" [ngModel]="selectedstd" readonly class="form-control"\r\n                                        name="standard" value="" />\r\n                                    <input type="hidden" [ngModel]="standardId" readonly class="form-control"\r\n                                        name="standardId" value="" />\r\n                                </div>\r\n                                <label for="subject" class="col-sm-2 col-form-label">Subject:\r\n                                </label>\r\n                                <div class="col-sm-4">\r\n                                    <input type="text" [ngModel]="subjectName" readonly class="form-control"\r\n                                        name="subject" value="" />\r\n                                    <input type="hidden" [ngModel]="subjectId" readonly class="form-control"\r\n                                        name="subjectId" value="" />\r\n                                </div>\r\n                            </div>\r\n                            <div class="form-group row">\r\n                                <label for="totalquestion" class="col-sm-2 col-form-label">Total Questions:\r\n                                </label>\r\n                                <div class="col-sm-2">\r\n                                    <input type="text" [ngModel]="totalQuestions" readonly\r\n                                        class="form-control-plaintext" name="totalquestion"\r\n                                        value="{{ totalQuestions }}" />\r\n                                </div>\r\n                                <label for="totalmarks" class="col-sm-2 col-form-label">Total Marks:\r\n                                </label>\r\n                                <div class="col-sm-2">\r\n                                    <input type="text" [ngModel]="totalMarks" readonly class="form-control-plaintext"\r\n                                        name="totalmarks" value="{{ totalMarks }}" />\r\n                                </div>\r\n                                <label for="totalduration" class="col-sm-2 col-form-label">Duration:\r\n                                </label>\r\n                                <div class="col-sm-2">\r\n                                    <input type="text" [ngModel]="duration" readonly class="form-control-plaintext"\r\n                                        name="totalduration" value="{{ duration }}" />\r\n                                </div>\r\n                            </div>\r\n                            <div class="card">\r\n                                <div class="card-body">\r\n                                    <div class="table-responsive">\r\n                                        <table ng-if="checkedQuestionList.length > 0" class="table">\r\n                                            <thead class="text-primary">\r\n                                                <th class="text-center">#</th>\r\n                                                <th class="text-center">Questions</th>\r\n                                                <th class="text-center">Marks</th>\r\n                                                <th class="text-center">Duration(Minutes)</th>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                <tr\r\n                                                    *ngFor="let sq of checkedQuestionList | paginate: { itemsPerPage: 5, currentPage: p } ;let i = index;let j = index">\r\n                                                    <td class="text-center">{{ i + 1 }}</td>\r\n                                                    <td>{{ sq.question }}</td>\r\n\r\n                                                    <td class="text-center">\r\n                                                        <input type="text" class="form-control" name="tb-marks"\r\n                                                            (keyup)="setMarks($event.target.value, sq)"\r\n                                                            value="{{ sq.marks }}" />\r\n                                                    </td>\r\n                                                    <td class="text-center">\r\n                                                        <input type="text" class="form-control" name="tb-duration"\r\n                                                            (keyup)="setDuration($event.target.value, sq)"\r\n                                                            value="{{ sq.time }}" />\r\n                                                    </td>\r\n                                                    <input type="hidden" name="qid" value="{{ sq.id }}" />\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                                    <div class="card-footer">\r\n                                        <div class="row">\r\n                                            <div class="ml-md-auto">\r\n                                                <pagination-controls (pageChange)="p = $event" autoHide="true"\r\n                                                    responsive="true">\r\n                                                </pagination-controls>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class="modal-footer justify-content-center">\r\n                                <button type="submit" class="btn btn-primary btn-round" data-dismiss="modal"\r\n                                    (click)="createTest(quizform.value)">\r\n                                    <i class="fa fa-plus" aria-hidden="true"></i> Create\r\n                                </button>\r\n                                <button type="button " class="btn btn-secondary btn-round" data-dismiss="modal">\r\n                                    <i class="fa fa-times" aria-hidden="true"></i> Cancel\r\n                                </button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class="card" *ngIf="viewTestFlag">\r\n        <div class="card-header">\r\n            <div class="row">\r\n                <div class="col-md-2">\r\n                    <h4 class="card-title">Test List</h4>\r\n                </div>\r\n                <div class="col-md-2">\r\n                    <label for="subject"\r\n                        style="color: black; font-size:18px !important;font-weight:500; margin-top: 13px !important; margin-left:34% !important;">Select\r\n                        Standard:</label>\r\n                </div>\r\n                <div class="col-md-2">\r\n                    <div class="dropdown form-group">\r\n                        <button class="dropdown-toggle btn btn-round btn-block" type="button" name="dropdownMenuButton"\r\n                            id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">\r\n                            {{ selectedStd }}\r\n                        </button>\r\n                        <div class="dropdown-menu dropdown-menu-right" aria-labelledby="dropdownMenuButton">\r\n                            <div class="dropdown-header">Select Standard</div>\r\n                            <div *ngFor="let std of stdlist">\r\n                                <a class="dropdown-item" (click)="selectStdVisitor(std.id)">{{\r\n                                    std.stdname\r\n                                    }}</a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class="col-md-2">\r\n                    <label for="subject"\r\n                        style="color: black; font-size:18px !important;font-weight:500; margin-top: 13px !important; margin-left:34% !important;">Select\r\n                        Subject:</label>\r\n                </div>\r\n                <div class="col-md-2">\r\n                    <div class="dropdown form-group">\r\n                        <button class="dropdown-toggle btn btn-round btn-block" type="button" name="dropdownMenuButton"\r\n                            id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">\r\n                            {{ selectedSubject }}\r\n                        </button>\r\n                        <div class="dropdown-menu dropdown-menu-right" aria-labelledby="dropdownMenuButton">\r\n                            <div class="dropdown-header">Select Subject</div>\r\n                            <div *ngFor="let sub of subjects">\r\n                                <a class="dropdown-item" (click)="selectSubjectList(sub.id)">{{\r\n                                    sub.subject\r\n                                    }}</a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class="ml-md-auto">\r\n                    <button type="cancel" class="btn btn-danger btn-round" (click)="backToHome()">\r\n                        <i class="fa fa-arrow-left"></i> Back\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class="card-body">\r\n            <div class="table-responsive">\r\n                <table class="table">\r\n                    <thead class="text-primary">\r\n                        <th class="text-center">#</th>\r\n                        <th class="text-center">Test Name</th>\r\n                        <th class="text-center">Total Marks</th>\r\n                        <th class="text-center">Total Duration</th>\r\n                        <th class="text-center">Created Date</th>\r\n                        <th class="text-center">Test Date</th>\r\n                        <th class="text-right">Actions</th>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr *ngFor="let tl of visitorTestList; let i = index">\r\n                            <td class="text-center">{{ i + 1 }}</td>\r\n                            <td class="text-center">{{ tl.testname }}</td>\r\n                            <td class="text-center">{{ tl.totalmarks }}</td>\r\n                            <td class="text-center">{{ tl.totalminute }}</td>\r\n                            <td class="text-center">{{ tl.createdate | date }}</td>\r\n                            <td class="text-center">{{ tl.updateddate | date }}</td>\r\n                            <td class="text-right">\r\n                                <button type="button" rel="tooltip" class="btn btn-info btn-icon btn-sm">\r\n                                    <i class="fa fa-eye" data-toggle="modal" data-target="#testVisitorModal"\r\n                                        (click)="ViewVisitorTestQue(tl)"></i>\r\n                                </button>\r\n                                \x3c!-- &nbsp;\r\n                                <button type="button" rel="tooltip" class="btn btn-success btn-icon btn-sm">\r\n                                    <i class="fa far fa-edit" data-toggle="modal" data-target="#noticeModal"\r\n                                        (click)="editSubject(s)"></i>\r\n                                </button> --\x3e\r\n                                &nbsp;\r\n                                <button type="button" rel="tooltip" class="btn btn-danger btn-icon btn-sm"\r\n                                    (click)="removeSubject(s.id)">\r\n                                    <i class="fa fa-times"></i>\r\n                                </button>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class="modal fade" id="testVisitorModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel"\r\n        aria-hidden="true">\r\n        <div class="modal-dialog modal-xl modal-notice">\r\n            <div class="modal-content">\r\n                <div class="modal-header">\r\n                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">\r\n                        <i class="nc-icon nc-simple-remove"></i>\r\n                    </button>\r\n                    <h5 class="modal-title" id="myModalLabel">Create Test / Quiz</h5>\r\n                </div>\r\n                <div class="modal-body">\r\n                    <div class="instruction">\r\n                        <form class="form-vertical" #quizform="ngForm">\r\n                            <div class="form-group row">\r\n                                <label for="testname" class="col-sm-2 col-form-label">Test Name:\r\n                                </label>\r\n                                <div class="col-sm-10">\r\n                                    <input type="text" disabled [(ngModel)]="questionModel.testname"\r\n                                        class="form-control" name="testname" value="" />\r\n                                </div>\r\n                            </div>\r\n                            <div class="form-group row">\r\n                                <label for="standard" class="col-sm-2 col-form-label">Standard:\r\n                                </label>\r\n                                <div class="col-sm-4">\r\n                                    <input type="text" disabled [(ngModel)]="selectedstd" readonly class="form-control"\r\n                                        name="selectedstd" value="" />\r\n                                    \x3c!-- <input type="hidden" [ngModel]="standardId" readonly class="form-control" name="standardId" value=""> --\x3e\r\n                                </div>\r\n                                <label for="subject" class="col-sm-2 col-form-label">Subject:\r\n                                </label>\r\n                                <div class="col-sm-4">\r\n                                    <input type="text" disabled [(ngModel)]="selectedSubject" readonly\r\n                                        class="form-control" name="selectedSubject" value="" />\r\n                                    \x3c!-- <input type="hidden" [ngModel]="subjectId" readonly class="form-control" name="subjectId" value=""> --\x3e\r\n                                </div>\r\n                            </div>\r\n                            <div class="form-group row">\r\n                                <label for="totalquestion" class="col-sm-2 col-form-label">Total Questions:\r\n                                </label>\r\n                                <div class="col-sm-2">\r\n                                    <input type="text" disabled [(ngModel)]="questionModel.totalque" readonly\r\n                                        class="form-control-plaintext" name="totalque" value="" />\r\n                                </div>\r\n                                <label for="totalmarks" class="col-sm-2 col-form-label">Total Marks:\r\n                                </label>\r\n                                <div class="col-sm-2">\r\n                                    <input type="text" disabled [(ngModel)]="questionModel.totalmarks" readonly\r\n                                        class="form-control-plaintext" name="totalmarks" value="" />\r\n                                </div>\r\n                                <label for="totalduration" class="col-sm-2 col-form-label">Duration:\r\n                                </label>\r\n                                <div class="col-sm-2">\r\n                                    <input type="text" disabled [(ngModel)]="questionModel.totalminute" readonly\r\n                                        class="form-control-plaintext" name="totalminute" value="" />\r\n                                </div>\r\n                            </div>\r\n                            <div class="card">\r\n                                <div class="card-body">\r\n                                    <div class="table-responsive">\r\n                                        <table class="table">\r\n                                            <thead class="text-primary">\r\n                                                <th class="text-center">#</th>\r\n                                                <th class="text-center">Questions type</th>\r\n                                                <th class="text-center">Questions</th>\r\n                                                <th class="text-center">Marks</th>\r\n                                                <th class="text-center">Duration(Minutes)</th>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                <tr *ngFor="let sq of queList; let i = index">\r\n                                                    <td class="text-center">{{ i + 1 }}</td>\r\n                                                    <td>{{ sq.quetype }}</td>\r\n                                                    <td>{{ sq.question }}</td>\r\n                                                    <td class="text-center">\r\n                                                        {{ sq.marks }}\r\n                                                    </td>\r\n                                                    <td class="text-center">\r\n                                                        {{ sq.time }}\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class="modal-footer justify-content-center">\r\n                                <button *ngIf="questionModel.activetest == 1" type="submit"\r\n                                    class="btn btn-success btn-round" data-dismiss="modal"\r\n                                    (click)="SendLinkToStudent(questionModel.id)">\r\n                                    <i class="fa fa-link" aria-hidden="true"></i> Already Sent\r\n                                    Link\r\n                                </button>\r\n                                <button *ngIf="questionModel.activetest == 0" type="submit"\r\n                                    class="btn btn-primary btn-round" data-dismiss="modal"\r\n                                    (click)="SendLinkToStudent(questionModel.id)">\r\n                                    <i class="fa fa-link" aria-hidden="true"></i> Send Link\r\n                                </button>\r\n                                <button type="button " class="btn btn-secondary btn-round" data-dismiss="modal">\r\n                                    <i class="fa fa-times" aria-hidden="true"></i> Cancel\r\n                                </button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>',styles:[""]}),x("design:paramtypes",[o.a,g.a,a.a,v])],t)}(),M=e("2v4T"),k=e("0oXA"),S=e("VyX+"),q=e("E2Sg"),j=function(t,n,e,r){var s,i=arguments.length,a=i<3?n:null===r?r=Object.getOwnPropertyDescriptor(n,e):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(t,n,e,r);else for(var o=t.length-1;o>=0;o--)(s=t[o])&&(a=(i<3?s(a):i>3?s(n,e,a):s(n,e))||a);return i>3&&a&&Object.defineProperty(n,e,a),a},L=function(t,n){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,n)},T=function(){function t(t,n,e,r){var s=this;this.testportalService=t,this.examService=n,this.activatedRoute=e,this.apiService=r,this.submitTestModel=new S.a,this.studentTestList=[],this.ruleBoxFlag=!1,this.questionBoxFlag=!1,this.testInfoBoxFlag=!1,this.testModel=new k.a,this.activatedRoute.queryParams.subscribe((function(t){s.subjectId=t.subid,s.stdid=t.stdid,s.uid=t.uid,s.startStuentExam()}))}return t.prototype.ngOnInit=function(){},t.prototype.getStudentTest=function(){},t.prototype.studentTest=function(t){this.testId=t.id,this.testModel.subject=t.subject,this.testModel.testname=t.testname,this.testModel.time=t.totalminute,this.testModel.marks=t.totalmarks,this.testInfoBoxFlag=!0},t.prototype.startStuentExam=function(){var t=this;this.testInfoBoxFlag=!1,this.ruleBoxFlag=!1,this.questionBoxFlag=!0;var n={subid:this.subjectId,stdid:this.stdid};this.examService.getViewVisitorTest(n).subscribe((function(n){t.queList=n,t.queList.forEach((function(n){n.uid=t.uid,t.examService.getOptionValueVisitor(n.id).subscribe((function(t){n.options=t}))}))}))},t.prototype.showRulesBox=function(){this.questionBoxFlag=!1,this.testInfoBoxFlag=!1,this.ruleBoxFlag=!0},t.prototype.cancelExam=function(){this.testInfoBoxFlag=!0,this.ruleBoxFlag=!1,this.questionBoxFlag=!1},t.prototype.backPendingTest=function(){this.testInfoBoxFlag=!1,this.ruleBoxFlag=!1,this.questionBoxFlag=!1},t.prototype.onItemChange=function(t,n){n.answer=t.optionlist},t.prototype.studentTestSubmit=function(){var t=this;this.testportalService.saveVisitorStudentTest(this.queList).subscribe((function(n){var e={subid:t.subjectId,stdid:t.stdid,uid:t.uid};t.testportalService.GetTotalResultVisitor(e).subscribe((function(n){var e={uid:t.uid,marks:n};t.testportalService.UpdateVisitorResult(e).subscribe((function(e){"success"==n&&t.apiService.showNotification("top","right","Test Successfully Completed.","success")}))}))}))},t.ctorParameters=function(){return[{type:q.a},{type:M.a},{type:i.a},{type:a.a}]},t=j([Object(r.o)({selector:"app-visitorexam",template:'<div class="main-content">\r\n    <div class="row" *ngIf="!testInfoBoxFlag && !ruleBoxFlag && !questionBoxFlag">\r\n        <div class="col-lg-3 col-md-6 col-sm-6" *ngFor="let s of studentTestList; let i = index">\r\n            <div class="card card-stats" (click)="openStdTest(s.id)">\r\n                <div class="card-body">\r\n                    <div class="row">\r\n                        <div class="col-5 col-md-4">\r\n                            <div class="icon-big text-center icon-warning">\r\n                                <i class="fa fa-university"></i>\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-7 col-md-8">\r\n                            <div class="numbers">\r\n                                <p class="card-title">{{ s.testname }}</p>\r\n                                <p class="card-category">Marks: {{ s.totalmarks }}</p>\r\n                                <p class="card-category">Minute: {{ s.totalminute }}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class="card-footer" (click)="studentTest(s)">\r\n                    <hr />\r\n                    <div class="stats"><i class="fa fa-arrow-right"></i> Start Test</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div *ngIf="testInfoBoxFlag" class="row">\r\n        <div class="col col-sm-12">\r\n            <div class="card text-center">\r\n                <div class="card-header">\r\n                    <div class="row">\r\n                        <div class="ml-md-auto">\r\n                            <button type="cancel" class="btn btn-danger btn-round" (click)="backPendingTest()">\r\n                                <i class="fa fa-arrow-left"></i> Back\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class="card-body">\r\n                    <h2>Exam Information</h2>\r\n                    <h5 class="card-title">\r\n                        Subject:\r\n                        <span class="badge badge-danger">{{ testModel.subject }}</span>\r\n                    </h5>\r\n                    <h5 class="card-title">\r\n                        Title:\r\n                        <span class="badge badge-danger">{{ testModel.testname }}</span>\r\n                    </h5>\r\n                    <ul class="list-group">\r\n                        <li class="\r\n                list-group-item\r\n                d-flex\r\n                justify-content-between\r\n                align-items-center\r\n              ">\r\n                            Total Questions:{{ testModel.totalque }}\r\n                            <h5><span class="badge badge-danger"></span></h5>\r\n                        </li>\r\n                        <li class="\r\n                list-group-item\r\n                d-flex\r\n                justify-content-between\r\n                align-items-center\r\n              ">\r\n                            Total Marks:\r\n                            <h5>\r\n                                <span class="badge badge-danger">{{ testModel.marks }}</span>\r\n                            </h5>\r\n                        </li>\r\n                        <li class="\r\n                list-group-item\r\n                d-flex\r\n                justify-content-between\r\n                align-items-center\r\n              ">\r\n                            Total Duration:\r\n                            <h5>\r\n                                <span class="badge badge-danger">{{ testModel.time }}</span>\r\n                            </h5>\r\n                        </li>\r\n                    </ul>\r\n                    <button type="button" class="btn btn-primary" (click)="showRulesBox()">\r\n                        Begin\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div *ngIf="ruleBoxFlag" class="row card">\r\n        <div class="col-md-12 mr-auto ml-auto">\r\n            <div class="card-body" data-color="primary">\r\n                <h4 class="text-center">\r\n                    Before You Start the Exam, Here are the Rules:\r\n                </h4>\r\n                <ol type="1">\r\n                    <li>The quiz will be of half an hour duration.</li>\r\n                    <li>You can attempt the quiz only once.</li>\r\n                    <li>All questions are Multiple Choice Question.</li>\r\n                    <li>Only one choice is correct.</li>\r\n                    <li>\r\n                        Every question carry different of marks.Negative marking for wrong\r\n                        answers.\r\n                    </li>\r\n                    <li>Try answer as quickly as you can.</li>\r\n                    <li>\r\n                        If you press Refresh or Go Back to previous page, there will be new\r\n                        question for you and the question you were on will be counted as\r\n                        attempted.\r\n                    </li>\r\n                    <li>\r\n                        You will be able to see the RESULT immediately when you submit the\r\n                        answer.\r\n                    </li>\r\n                    <li>Click Start Test to attempt the quiz.</li>\r\n                    <li>\r\n                        The time will start the moment you click the Start Test button.\r\n                    </li>\r\n                    <li>You can resume this quiz, if interrupted due to any reason.</li>\r\n                    <li>\r\n                        Click on Next button to move next question. Please note that you\r\n                        will not be able to go back to any of the previous question after\r\n                        clicking Next button.\r\n                    </li>\r\n                    <li>Click on Submit Test button on completion of the quiz.</li>\r\n                </ol>\r\n                <div class="row">\r\n                    <div class="col col-sm-12 text-center">\r\n                        <button type="cancel" class="btn btn-round" (click)="cancelExam()">\r\n                            <i class="fa fa-times" aria-hidden="true"></i> Cancel\r\n                        </button>\r\n                        <button type="button" class="btn btn-round btn-success" (click)="startStuentExam()">\r\n                            <i class="fa fa-hourglass-start" aria-hidden="true"></i> START\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div *ngIf="questionBoxFlag">\r\n        <div class="row">\r\n            <div class="col-md-10 mr-auto ml-auto">\r\n                <div *ngFor="let dt of queList; let i = index" class="jumbotron" data-color="primary"\r\n                    id="{{ \'que\' + i }}">\r\n                    <div>\r\n\r\n\r\n                        <h2 *ngIf="dt.question != undefined ">{{ dt.question }}</h2>\r\n\r\n                        <div>\r\n                            <div *ngFor="let op of dt.options">\r\n                                <div class="row">\r\n                                    <div class="col col-sm-12" *ngIf="op.optionlist != undefined">\r\n                                        <label>\r\n                                            <input name="radioOpt" type="radio" value="{{op.optionlist}}"\r\n                                                (change)="onItemChange(op , dt)" />\r\n                                            {{op.optionlist}}\r\n                                        </label>\r\n                                    </div>\r\n                                    \x3c!-- <div class="col col-sm-12" *ngIf="op.imageoption != \'null\' || op.imageoption != \' \' ">\r\n                                        <img src="http://31.220.59.174:3000{{op.imageoption}}">\r\n                                    </div> --\x3e\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        \x3c!-- <div *ngIf="dt.quetype != \'MCQ\'" class="row">\r\n                            <div class="col col-sm-12">\r\n                                <label for="ansta">Write Your Answer Here</label>\r\n                                <pre></pre>\r\n                                <textarea id="ansta" [(ngModel)]="dt.answer" name="ansta" rows="4" cols="100"></textarea>\r\n                            </div>\r\n                        </div> --\x3e\r\n                        <div class="sq"></div>\r\n                        <div class="lq"></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class="row">\r\n            <div class="col-md-4 offset-md-5">\r\n                <button type="submit" class="btn btn-info btn-round" (click)="studentTestSubmit()">\r\n                    <i class="fa fa-paper-plane" aria-hidden="true"></i> Submit Test\r\n                </button>\r\n                \x3c!-- <button type="cancel" class="btn btn-danger btn-round" (click)="closeTeacherForm()">\r\n                    <i class="fa fa-arrow-left"></i> Back</button> --\x3e\r\n                \x3c!-- <button type="submit" class="btn btn-info btn-round" routerLink="/manage/std">Add Standard</button> --\x3e\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>',styles:[""]}),L("design:paramtypes",[q.a,M.a,i.a,a.a])],t)}(),I=e("PSD3"),Q=e.n(I),C=function(t,n,e,r){var s,i=arguments.length,a=i<3?n:null===r?r=Object.getOwnPropertyDescriptor(n,e):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(t,n,e,r);else for(var o=t.length-1;o>=0;o--)(s=t[o])&&(a=(i<3?s(a):i>3?s(n,e,a):s(n,e))||a);return i>3&&a&&Object.defineProperty(n,e,a),a},V=function(t,n){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,n)},B=function(){function t(t,n){this.VisitorService=t,this.apiService=n,this.visitorModel=new m,this.getAllVisitor()}return t.prototype.ngOnInit=function(){},t.prototype.getAllVisitor=function(){var t=this;this.VisitorService.getAllVisitorList().subscribe((function(n){t.visitorList=n;for(var e=0;e<t.visitorList.length;e++)t.visitorList[e].index=e+1}))},t.prototype.contactOrNot=function(t,n){var e=this;this.visitorModel.id=n,this.visitorModel.isactive=t,this.VisitorService.updateVisitorInform(this.visitorModel).subscribe((function(t){e.getAllVisitor()}))},t.prototype.viewVisitorDetails=function(t){this.visitorModel=t},t.prototype.removeVisitor=function(t){var n=this;Q.a.fire({title:"Are you sure?",text:"You want to delete!",icon:"warning",showCancelButton:!0,customClass:{confirmButton:"btn btn-success",cancelButton:"btn btn-danger"},confirmButtonText:"Yes",buttonsStyling:!1}).then((function(e){1==e.value&&(n.VisitorService.removeVisitor(t).subscribe((function(t){n.apiService.showNotification("top","right","Banners Successfully Removed.","success")})),Q.a.fire({title:"Deleted!",text:"Your banner has been deleted.",icon:"success",customClass:{confirmButton:"btn btn-success"},buttonsStyling:!1}))})),this.getAllVisitor()},t.ctorParameters=function(){return[{type:v},{type:a.a}]},t=C([Object(r.o)({selector:"app-visitorlist",template:'<div class="main-content">\r\n    <div class="card">\r\n        <div class="card-header">\r\n            <h4 class="card-title">Visitor List</h4>\r\n        </div>\r\n        <div class="card-body">\r\n            <div class="table-responsive">\r\n                <table class="table">\r\n                    <thead class="text-primary">\r\n                        <th class="text-center">#</th>\r\n                        <th class="text-center">Name</th>\r\n                        <th class="text-center">Email</th>\r\n                        <th class="text-center">Contact</th>\r\n                        <th class="text-center">WhatsApp Number</th>\r\n                        <th class="text-center">Contact or Not</th>\r\n                        <th class="text-right">Actions</th>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr\r\n                            *ngFor="let item of visitorList | paginate: { itemsPerPage: 5, currentPage: p }; let i = index">\r\n                            <td class="text-center">{{ item.index }}</td>\r\n                            <td class="text-center">{{ item.firstname}} {{item.lastname }}</td>\r\n                            <td class="text-center">{{ item.email }}</td>\r\n                            <td class="text-center">{{ item.contact }}</td>\r\n                            <td class="text-center">{{ item.wappnumber }}</td>\r\n                            <td class="text-center">\r\n                                <div class="form-check">\r\n                                    <label class="form-check-label">\r\n                                        <input class="form-check-input" [(ngModel)]="item.isactive" name="list_name"\r\n                                            (change)="contactOrNot($event.target.checked,item.id)" value="h1"\r\n                                            type="checkbox" />\r\n                                        <span class="form-check-sign"></span>\r\n                                    </label>\r\n                                </div>\r\n                            </td>\r\n                            <td class="text-right">\r\n                                <button type="button" rel="tooltip" class="btn btn-info  btn-icon btn-sm">\r\n                                    <i class="fa fa-eye" data-toggle="modal" data-target="#VisitorModal"\r\n                                        (click)="viewVisitorDetails(item)"></i>\r\n                                </button>\r\n                                &nbsp;\r\n                                <button type="button" rel="tooltip" class="btn btn-danger btn-icon btn-sm"\r\n                                    (click)="removeVisitor(item.id)">\r\n                                    <i class="fa fa-times"></i>\r\n                                </button>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n        <div class="card-footer">\r\n            <div class="row">\r\n                <div class="ml-md-auto">\r\n                    <pagination-controls (pageChange)="p = $event" autoHide="true" responsive="true">\r\n                    </pagination-controls>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class="modal fade" id="VisitorModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel"\r\n        aria-hidden="true">\r\n        <div class="modal-dialog modal-xl modal-notice">\r\n            <div class="modal-content">\r\n                <div class="modal-header">\r\n                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">\r\n                        <i class="nc-icon nc-simple-remove"></i>\r\n                    </button>\r\n                    <h5 class="modal-title" id="myModalLabel">Visitor Details</h5>\r\n                </div>\r\n                <div class="modal-body">\r\n                    <div class="instruction">\r\n                        <form class="form-vertical" #quizform="ngForm">\r\n                            <div class="row">\r\n                                <div class="col-sm-4">\r\n                                    <label>First Name</label>\r\n                                    <input type="text" class="form-control" disabled id="firstname" name="firstname"\r\n                                        [(ngModel)]="visitorModel.firstname" #fname="ngModel" />\r\n                                </div>\r\n                                <div class="col-sm-4">\r\n                                    <label>Middle Name</label>\r\n                                    <input type="text" class="form-control" disabled id="middlename" name="middlename"\r\n                                        [(ngModel)]="visitorModel.middlename" #fname="ngModel" />\r\n                                </div>\r\n                                <div class="col-sm-4">\r\n                                    <label>Last Name</label>\r\n                                    <input type="text" class="form-control" disabled id="lastname" name="lastname"\r\n                                        [(ngModel)]="visitorModel.lastname" #fname="ngModel" />\r\n                                </div>\r\n                                <div class="col-sm-4">\r\n                                    <label>Contact Number</label>\r\n                                    <input type="text" class="form-control" disabled id="contact"\r\n                                        [(ngModel)]="visitorModel.contact" name="contact" #fname="ngModel" />\r\n                                </div>\r\n                                <div class="col-sm-4">\r\n                                    <label>WhatsApp Number</label>\r\n                                    <input type="number" class="form-control" disabled id="fname"\r\n                                        [(ngModel)]="visitorModel.wappnumber" name="wapp" #fname="ngModel" />\r\n                                </div>\r\n                                <div class="col-sm-4">\r\n                                    <label>Email</label>\r\n                                    <input type="text" class="form-control" disabled id="email"\r\n                                        [(ngModel)]="visitorModel.email" name="email" #fname="ngModel" />\r\n                                </div>\r\n\r\n                                <div class="col-sm-4">\r\n                                    <label>Gender</label>\r\n                                    <input type="gender" class="form-control" disabled id="gender"\r\n                                        [(ngModel)]="visitorModel.gender" name="gender" #fname="ngModel" />\r\n                                </div>\r\n                                <div class="col-sm-4">\r\n                                    <label>Father Contact Number</label>\r\n                                    <input type="text" class="form-control" disabled id="parents"\r\n                                        [(ngModel)]="visitorModel.fatherCont" name="parents" #parents="ngModel" />\r\n                                </div>\r\n                                <div class="col-sm-4">\r\n                                    <label>Mother Name</label>\r\n                                    <input type="text" class="form-control" disabled id="mname"\r\n                                        [(ngModel)]="visitorModel.mothername" name="mname" #mname="ngModel" />\r\n                                </div>\r\n                                <div class="col-sm-4">\r\n                                    <label>Mother Number</label>\r\n                                    <input type="number" class="form-control" disabled id="mnumber"\r\n                                        [(ngModel)]="visitorModel.motherCont" name="mnumber" #mnumber="ngModel" />\r\n                                </div>\r\n                                <div class="col-sm-4">\r\n                                    <label>School Name</label>\r\n                                    <input type="text" class="form-control" disabled id="schoolname"\r\n                                        [(ngModel)]="visitorModel.school" name="schoolname" #schoolname="ngModel" />\r\n                                </div>\r\n                                <div class="col-sm-4">\r\n                                    <label>Last Qualification</label>\r\n                                    <input type="text" class="form-control" disabled id="lastqulification"\r\n                                        [(ngModel)]="visitorModel.qulification" name="lastqulification"\r\n                                        #lastqulification="ngModel" />\r\n                                </div>\r\n                                <div class="col-sm-4">\r\n                                    <label>Percentage (%)</label>\r\n                                    <input type="text" class="form-control" disabled id="percentage"\r\n                                        [(ngModel)]="visitorModel.percentage" name="percentage" #percentage="ngModel" />\r\n\r\n                                </div>\r\n                                <div class="col-sm-4">\r\n                                    <label>Address</label>\r\n                                    <textarea type="text" class="form-control" disabled id="address" name="address"\r\n                                        rows="3" cols="30" [(ngModel)]="visitorModel.address"\r\n                                        #address="ngModel"></textarea>\r\n\r\n                                </div>\r\n                                <div class="col-sm-4">\r\n                                    <label>City</label>\r\n                                    <input type="text" class="form-control" disabled id="city"\r\n                                        [(ngModel)]="visitorModel.city" name="city" #city="ngModel" />\r\n                                </div>\r\n                                <div class="col-sm-4">\r\n                                    <label>Pincode</label>\r\n                                    <input type="text" class="form-control" disabled id="pincode"\r\n                                        [(ngModel)]="visitorModel.pincode" name="pincode" #pincode="ngModel" />\r\n                                </div>\r\n                            </div>\r\n                            <div class="modal-footer justify-content-center">\r\n                                <button type="button " class="btn btn-secondary btn-round" data-dismiss="modal">\r\n                                    <i class="fa fa-times" aria-hidden="true"></i> Close\r\n                                </button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>',styles:[""]}),V("design:paramtypes",[v,a.a])],t)}(),z=[{path:"",children:[{path:"visitorreg",component:h}]},{path:"",children:[{path:"manageque",component:w}]},{path:"",children:[{path:"visitorexam",component:T}]},{path:"",children:[{path:"visitorlist",component:B}]}],A=e("3Pt+"),F=e("oOf3"),R=function(t,n,e,r){var s,i=arguments.length,a=i<3?n:null===r?r=Object.getOwnPropertyDescriptor(n,e):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(t,n,e,r);else for(var o=t.length-1;o>=0;o--)(s=t[o])&&(a=(i<3?s(a):i>3?s(n,e,a):s(n,e))||a);return i>3&&a&&Object.defineProperty(n,e,a),a},N=function(){function t(){}return t=R([Object(r.M)({declarations:[h,w,T,B],imports:[s.c,A.c,F.a,i.e.forChild(z)]})],t)}()}}]);